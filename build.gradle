plugins {
	id 'java'
	id 'eclipse'
	id "maven"
	id "maven-publish"
	id "com.jfrog.bintray" version "1.7"
	id 'co.riiid.gradle' version '0.4.2'

	id 'com.github.ben-manes.versions' version '0.13.0'
	id 'com.github.johnrengelman.shadow' version '1.2.4'

	id 'synapticloop.documentr' version '2.8.2'
	id "synapticloop.copyrightr" version "1.1.1"
}

group = 'synapticloop'
archivesBaseName = 'recipease'
description = """A recipe book creator from json -> PDF"""

version = '1.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenLocal()
	mavenCentral()
	jcenter()
}

dependencies {
	runtime 'org.json:json:20160810'
	runtime 'synapticloop:simplelogger:1.1.1'
	runtime 'synapticloop:simpleusage:1.1.2'
	runtime 'org.apache.xmlgraphics:xmlgraphics-commons:2.1'
	runtime 'org.apache.xmlgraphics:fop:2.1'
	runtime 'synapticloop:templar:1.4.1'
	runtime 'com.fasterxml.jackson.core:jackson-databind:2.8.5'

	compile 'org.json:json:20160810'
	compile 'synapticloop:simplelogger:1.1.1'
	compile 'synapticloop:simpleusage:1.1.2'
	compile 'org.apache.xmlgraphics:xmlgraphics-commons:2.1'
	compile 'org.apache.xmlgraphics:fop:2.1'
	compile 'synapticloop:templar:1.4.1'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.8.5'

	testCompile 'junit:junit:4.12'

	testRuntime 'junit:junit:4.12'
}

configurations.all {
	resolutionStrategy {
		failOnVersionConflict()
		force 'org.slf4j:slf4j-api:1.7.13',
					'xml-apis:xml-apis:2.0.2',
					'org.json:json:20160212'

		eachDependency {
			DependencyResolveDetails details ->
				if (details.requested.group == 'junit') {
					details.useVersion '4.12'
				}
		}
	}
}



jar {
	manifest {
		attributes("Main-Class": "synapticloop.recipease.Main",
				"Implementation-Version": version)
	}
}

/*
 *
 * Publish to bintray
 *
 */


def javaApiUrl = 'http://docs.oracle.com/javase/1.7.0/docs/api/'
def groovyApiUrl = 'http://groovy.codehaus.org/gapi/'

tasks.withType(Javadoc) {
	options.links(javaApiUrl, groovyApiUrl)
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

publishing {
	publications {
		Synapticloop(MavenPublication) {
			from components.java
			artifact sourcesJar
			artifact javadocJar

			groupId 'synapticloop'
			artifactId 'recipease'

			pom.withXml {
				configurations.compile.resolvedConfiguration.firstLevelModuleDependencies.each { dep ->
					asNode().dependencies[0].dependency.find {
						it.artifactId[0].text() == dep.moduleName &&
								it.groupId[0].text() == dep.moduleGroup
					}.scope[0].value = 'compile'
				}
			}
		}
	}
}

bintray {
	user = System.getenv('BINTRAY_USER')
	key = System.getenv('BINTRAY_PASSWORD')

	publications = [ 'Synapticloop' ]

	publish = true

	pkg {
		repo = 'maven'
		name = 'recipease'
	}

}

github {
	owner = 'synapticloopltd'
	repo = archivesBaseName
	if(System.getenv('GITHUB_TOKEN')) {
		token = System.getenv('GITHUB_TOKEN')
	}
	tagName = version
	name = version
	assets = [
		'build/libs/' + archivesBaseName + '-' + version + '-all.jar'
	]
}

build.finalizedBy(project.tasks.documentr)
build.finalizedBy(project.tasks.shadowJar)

